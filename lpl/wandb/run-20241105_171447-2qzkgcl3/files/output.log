Epoch 1:   3% 31/938 [00:17<06:25,  2.35it/s]
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
delta_w shape: torch.Size([16384, 10]), self.weights shape: torch.Size([16384, 10])
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/content/neural_cognitive_modeling_project/scripts/train_lpl.py", line 154, in <module>
    main()
  File "/content/neural_cognitive_modeling_project/scripts/train_lpl.py", line 106, in main
    train_loss = train_lpl(model, learning_rule, device, train_loader, optimizer, epoch)
  File "/content/neural_cognitive_modeling_project/scripts/train_lpl.py", line 23, in train_lpl
    loss.backward()
  File "/usr/local/lib/python3.10/dist-packages/torch/_tensor.py", line 581, in backward
    torch.autograd.backward(
  File "/usr/local/lib/python3.10/dist-packages/torch/autograd/__init__.py", line 347, in backward
    _engine_run_backward(
  File "/usr/local/lib/python3.10/dist-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
  File "/usr/local/lib/python3.10/dist-packages/wandb/integration/torch/wandb_torch.py", line 276, in <lambda>
    handle = var.register_hook(lambda grad: _callback(grad, log_track))
KeyboardInterrupt
